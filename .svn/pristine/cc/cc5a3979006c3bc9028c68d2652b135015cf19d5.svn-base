<?php
class ControllerSettingStore extends Controller
{
	private $error = array();

	public function index()
	{
		$this->registry->language('setting/store');
		$this->document->setTitle($this->language->get('heading_title'));
		$this->registry->model('setting/store');

		return $this->getList();
	}

	public function insert()
	{
		$this->registry->language('setting/store');
		$this->document->setTitle($this->language->get('heading_title'));
		$this->registry->model('setting/store');

		if (($this->request->server['REQUEST_METHOD'] == 'POST') && $this->validateForm())
		{
			$store_id = $this->model_setting_store->addStore($this->request->post);
			$this->registry->model('setting/setting');
			$this->model_setting_setting->editSetting('config', $this->request->post, $store_id);
			$this->session->data['success'] = $this->language->get('text_success');
			$this->registry->redirect($this->url->link('setting/store'));
		}

		return $this->getForm();
	}

	public function update()
	{
		$this->registry->language('setting/store');
		$this->document->setTitle($this->language->get('heading_title'));
		$this->registry->model('setting/store');

		if (($this->request->server['REQUEST_METHOD'] == 'POST') && $this->validateForm())
		{
			$this->model_setting_store->editStore($this->request->get['store_id'], $this->request->post);
			$this->registry->model('setting/setting');
			$this->model_setting_setting->editSetting('config', $this->request->post, $this->request->get['store_id']);
			$this->session->data['success'] = $this->language->get('text_success');
			$this->registry->redirect($this->url->link('setting/store', 'store_id=' . $this->request->get['store_id'], true));
		}

		return $this->getForm();
	}

	public function delete()
	{
		$this->registry->language('setting/store');
		$this->document->setTitle($this->language->get('heading_title'));
		$this->registry->model('setting/store');
		$this->registry->model('setting/setting');

		if (isset($this->request->post['selected']) && $this->validateDelete())
		{
			foreach ($this->request->post['selected'] as $store_id)
			{
				$this->model_setting_store->deleteStore($store_id);
				$this->model_setting_setting->deleteSetting('config', $store_id);
			}
			$this->session->data['success'] = $this->language->get('text_success');
			$this->registry->redirect($this->url->link('setting/store'));
		}

		return $this->getList();
	}

	private function getList()
	{
		/**
		 * 连接组合处理
		 */
		$url = isset($this->request->get['page']) ? '&page=' . $this->request->get['page'] : '';

		/**
		 * 导航栏组合
		 */
		$vrs['breadcrumbs']   = array();
		$vrs['breadcrumbs'][] = array(
			'text'      => $this->language->get('text_home'),
			'href'      => $this->url->link('common/home'),
			'separator' => false
		);

		$vrs['breadcrumbs'][] = array(
			'text'      => $this->language->get('heading_title'),
			'href'      => $this->url->link('setting/store'),
			'separator' => ' :: '
		);

		$vrs['insert'] = $this->url->link('setting/store/insert');
		$vrs['delete'] = $this->url->link('setting/store/delete');
		$vrs['stores'] = array();
		$action        = array();
		if ($this->config->mpermission)
		{
			$action[] = array(
				'text' => $this->language->get('text_edit'),
				'href' => $this->url->link('setting/setting')
			);
		}

		$vrs['stores'][] = array(
			'store_id' => 0,
			'name'     => $this->config->get('config_name') . $this->language->get('text_default'),
			'domain'   => $this->config->get('config_domain'),
			'url'      => HTTP_STORE,
			'selected' => isset($this->request->post['selected']) && in_array(0, $this->request->post['selected']),
			'action'   => $action
		);

		$store_total = $this->model_setting_store->getTotalStores();
		$results     = $this->model_setting_store->getStores();
		foreach ($results as $result)
		{
			$action = array();
			if ($this->config->mpermission)
			{
				$action[] = array(
					'text' => $this->language->get('text_edit'),
					'href' => $this->url->link('setting/store/update', 'store_id=' . $result['store_id'], true)
				);
			}

			$vrs['stores'][] = array(
				'store_id' => $result['store_id'],
				'name'     => $result['name'],
				'domain'   => $result['domain'],
				'url'      => $result['url'],
				'selected' => isset($this->request->post['selected']) && in_array($result['store_id'], $this->request->post['selected']),
				'action'   => $action
			);
		}

		$vrs['heading_title']   = $this->language->get('heading_title');
		$vrs['text_no_results'] = $this->language->get('text_no_results');
		$vrs['column_name']     = $this->language->get('column_name');
		$vrs['column_domain']   = $this->language->get('column_domain');
		$vrs['column_url']      = $this->language->get('column_url');
		$vrs['column_action']   = $this->language->get('column_action');
		$vrs['button_insert']   = $this->language->get('button_insert');
		$vrs['button_delete']   = $this->language->get('button_delete');
		$vrs['error_warning']   = isset($this->error['warning']) ? $this->error['warning'] : '';

		$vrs['success'] = '';
		if (isset($this->session->data['success']))
		{
			$vrs['success'] = $this->session->data['success'];
			unset($this->session->data['success']);
		}

		/**
		 * 模板处理
		 */
		$vrs['page_header'] = $this->registry->exectrl('common/page_header');
		$vrs['page_footer'] = $this->registry->exectrl('common/page_footer');

		return $this->view('template/setting/store_list.tpl', $vrs);
	}

	public function getForm()
	{
		$vrs['heading_title']                = $this->language->get('heading_title');
		$vrs['text_select']                  = $this->language->get('text_select');
		$vrs['text_none']                    = $this->language->get('text_none');
		$vrs['text_yes']                     = $this->language->get('text_yes');
		$vrs['text_no']                      = $this->language->get('text_no');
		$vrs['text_items']                   = $this->language->get('text_items');
		$vrs['text_tax']                     = $this->language->get('text_tax');
		$vrs['text_account']                 = $this->language->get('text_account');
		$vrs['text_checkout']                = $this->language->get('text_checkout');
		$vrs['text_stock']                   = $this->language->get('text_stock');
		$vrs['text_image_manager']           = $this->language->get('text_image_manager');
		$vrs['text_browse']                  = $this->language->get('text_browse');
		$vrs['text_clear']                   = $this->language->get('text_clear');
		$vrs['text_shipping']                = $this->language->get('text_shipping');
		$vrs['text_payment']                 = $this->language->get('text_payment');
		$vrs['entry_domain']                 = $this->language->get('entry_domain');
		$vrs['entry_url']                    = $this->language->get('entry_url');
		$vrs['entry_ssl']                    = $this->language->get('entry_ssl');
		$vrs['entry_name']                   = $this->language->get('entry_name');
		$vrs['entry_owner']                  = $this->language->get('entry_owner');
		$vrs['entry_address']                = $this->language->get('entry_address');
		$vrs['entry_email']                  = $this->language->get('entry_email');
		$vrs['entry_telephone']              = $this->language->get('entry_telephone');
		$vrs['entry_fax']                    = $this->language->get('entry_fax');
		$vrs['entry_title']                  = $this->language->get('entry_title');
		$vrs['entry_meta_description']       = $this->language->get('entry_meta_description');
		$vrs['entry_layout']                 = $this->language->get('entry_layout');
		$vrs['entry_template']               = $this->language->get('entry_template');
		$vrs['entry_country']                = $this->language->get('entry_country');
		$vrs['entry_zone']                   = $this->language->get('entry_zone');
		$vrs['entry_language']               = $this->language->get('entry_language');
		$vrs['entry_currency']               = $this->language->get('entry_currency');
		$vrs['entry_catalog_limit']          = $this->language->get('entry_catalog_limit');
		$vrs['entry_tax']                    = $this->language->get('entry_tax');
		$vrs['entry_tax_default']            = $this->language->get('entry_tax_default');
		$vrs['entry_tax_customer']           = $this->language->get('entry_tax_customer');
		$vrs['entry_customer_group']         = $this->language->get('entry_customer_group');
		$vrs['entry_customer_group_display'] = $this->language->get('entry_customer_group_display');
		$vrs['entry_customer_price']         = $this->language->get('entry_customer_price');
		$vrs['entry_account']                = $this->language->get('entry_account');
		$vrs['entry_cart_weight']            = $this->language->get('entry_cart_weight');
		$vrs['entry_guest_checkout']         = $this->language->get('entry_guest_checkout');
		$vrs['entry_checkout']               = $this->language->get('entry_checkout');
		$vrs['entry_order_status']           = $this->language->get('entry_order_status');
		$vrs['entry_stock_display']          = $this->language->get('entry_stock_display');
		$vrs['entry_stock_checkout']         = $this->language->get('entry_stock_checkout');
		$vrs['entry_ajax_cart']              = $this->language->get('entry_ajax_cart');
		$vrs['entry_logo']                   = $this->language->get('entry_logo');
		$vrs['entry_icon']                   = $this->language->get('entry_icon');
		$vrs['entry_image_category']         = $this->language->get('entry_image_category');
		$vrs['entry_image_thumb']            = $this->language->get('entry_image_thumb');
		$vrs['entry_image_popup']            = $this->language->get('entry_image_popup');
		$vrs['entry_image_product']          = $this->language->get('entry_image_product');
		$vrs['entry_image_additional']       = $this->language->get('entry_image_additional');
		$vrs['entry_image_related']          = $this->language->get('entry_image_related');
		$vrs['entry_image_compare']          = $this->language->get('entry_image_compare');
		$vrs['entry_image_wishlist']         = $this->language->get('entry_image_wishlist');
		$vrs['entry_image_cart']             = $this->language->get('entry_image_cart');
		$vrs['entry_use_ssl']                = $this->language->get('entry_use_ssl');
		$vrs['button_save']                  = $this->language->get('button_save');
		$vrs['button_cancel']                = $this->language->get('button_cancel');
		$vrs['tab_general']                  = $this->language->get('tab_general');
		$vrs['tab_store']                    = $this->language->get('tab_store');
		$vrs['tab_local']                    = $this->language->get('tab_local');
		$vrs['tab_option']                   = $this->language->get('tab_option');
		$vrs['tab_image']                    = $this->language->get('tab_image');
		$vrs['tab_server']                   = $this->language->get('tab_server');
		$vrs['error_warning']                = isset($this->error['warning']) ? $this->error['warning'] : '';
		$vrs['error_domain']                 = isset($this->error['domain']) ? $this->error['domain'] : '';
		$vrs['error_url']                    = isset($this->error['url']) ? $this->error['url'] : '';
		$vrs['error_name']                   = isset($this->error['name']) ? $this->error['name'] : '';
		$vrs['error_owner']                  = isset($this->error['owner']) ? $this->error['owner'] : '';
		$vrs['error_address']                = isset($this->error['address']) ? $this->error['address'] : '';
		$vrs['error_email']                  = isset($this->error['email']) ? $this->error['email'] : '';
		$vrs['error_telephone']              = isset($this->error['telephone']) ? $this->error['telephone'] : '';
		$vrs['error_title']                  = isset($this->error['title']) ? $this->error['title'] : '';
		$vrs['error_customer_group_display'] = isset($this->error['customer_group_display']) ? $this->error['customer_group_display'] : '';
		$vrs['error_image_category']         = isset($this->error['image_category']) ? $this->error['image_category'] : '';
		$vrs['error_image_thumb']            = isset($this->error['image_thumb']) ? $this->error['image_thumb'] : '';
		$vrs['error_image_popup']            = isset($this->error['image_popup']) ? $this->error['image_popup'] : '';
		$vrs['error_image_product']          = isset($this->error['image_product']) ? $this->error['image_product'] : '';
		$vrs['error_image_additional']       = isset($this->error['image_additional']) ? $this->error['image_additional'] : '';
		$vrs['error_image_related']          = isset($this->error['image_related']) ? $this->error['image_related'] : '';
		$vrs['error_image_compare']          = isset($this->error['image_compare']) ? $this->error['image_compare'] : '';
		$vrs['error_image_wishlist']         = isset($this->error['image_wishlist']) ? $this->error['image_wishlist'] : '';
		$vrs['error_image_cart']             = isset($this->error['image_cart']) ? $this->error['image_cart'] : '';
		$vrs['error_catalog_limit']          = isset($this->error['catalog_limit']) ? $this->error['catalog_limit'] : '';

		/**
		 * 导航栏组合
		 */
		$vrs['breadcrumbs']   = array();
		$vrs['breadcrumbs'][] = array(
			'text'      => $this->language->get('text_home'),
			'href'      => $this->url->link('common/home'),
			'separator' => false
		);

		$vrs['breadcrumbs'][] = array(
			'text'      => $this->language->get('heading_title'),
			'href'      => $this->url->link('setting/store'),
			'separator' => ' :: '
		);

		$vrs['success'] = '';
		if (isset($this->session->data['success']))
		{
			$vrs['success'] = $this->session->data['success'];
			unset($this->session->data['success']);
		}
		if (!isset($this->request->get['store_id']))
		{
			$vrs['action'] = $this->url->link('setting/store/insert');
		}
		else
		{
			$vrs['action'] = $this->url->link('setting/store/update', 'store_id=' . $this->request->get['store_id'], true);
		}
		$vrs['cancel'] = $this->url->link('setting/store');
		if (isset($this->request->get['store_id']))
		{
			$this->registry->model('setting/setting');
			$store_info = $this->model_setting_setting->getSetting('config', $this->request->get['store_id']);
		}

		if (isset($this->request->post['config_domain']))
		{
			$vrs['config_domain'] = $this->request->post['config_domain'];
		}
		elseif (isset($store_info['config_domain']))
		{
			$vrs['config_domain'] = $store_info['config_domain'];
		}
		else
		{
			$vrs['config_domain'] = '';
		}

		if (isset($this->request->post['config_url']))
		{
			$vrs['config_url'] = $this->request->post['config_url'];
		}
		elseif (isset($store_info['config_url']))
		{
			$vrs['config_url'] = $store_info['config_url'];
		}
		else
		{
			$vrs['config_url'] = '';
		}

		if (isset($this->request->post['config_ssl']))
		{
			$vrs['config_ssl'] = $this->request->post['config_ssl'];
		}
		elseif (isset($store_info['config_ssl']))
		{
			$vrs['config_ssl'] = $store_info['config_ssl'];
		}
		else
		{
			$vrs['config_ssl'] = '';
		}

		if (isset($this->request->post['config_name']))
		{
			$vrs['config_name'] = $this->request->post['config_name'];
		}
		elseif (isset($store_info['config_name']))
		{
			$vrs['config_name'] = $store_info['config_name'];
		}
		else
		{
			$vrs['config_name'] = '';
		}

		if (isset($this->request->post['config_owner']))
		{
			$vrs['config_owner'] = $this->request->post['config_owner'];
		}
		elseif (isset($store_info['config_owner']))
		{
			$vrs['config_owner'] = $store_info['config_owner'];
		}
		else
		{
			$vrs['config_owner'] = '';
		}

		if (isset($this->request->post['config_address']))
		{
			$vrs['config_address'] = $this->request->post['config_address'];
		}
		elseif (isset($store_info['config_address']))
		{
			$vrs['config_address'] = $store_info['config_address'];
		}
		else
		{
			$vrs['config_address'] = '';
		}

		if (isset($this->request->post['config_email']))
		{
			$vrs['config_email'] = $this->request->post['config_email'];
		}
		elseif (isset($store_info['config_email']))
		{
			$vrs['config_email'] = $store_info['config_email'];
		}
		else
		{
			$vrs['config_email'] = '';
		}

		if (isset($this->request->post['config_telephone']))
		{
			$vrs['config_telephone'] = $this->request->post['config_telephone'];
		}
		elseif (isset($store_info['config_telephone']))
		{
			$vrs['config_telephone'] = $store_info['config_telephone'];
		}
		else
		{
			$vrs['config_telephone'] = '';
		}

		if (isset($this->request->post['config_fax']))
		{
			$vrs['config_fax'] = $this->request->post['config_fax'];
		}
		elseif (isset($store_info['config_fax']))
		{
			$vrs['config_fax'] = $store_info['config_fax'];
		}
		else
		{
			$vrs['config_fax'] = '';
		}

		if (isset($this->request->post['config_title']))
		{
			$vrs['config_title'] = $this->request->post['config_title'];
		}
		elseif (isset($store_info['config_title']))
		{
			$vrs['config_title'] = $store_info['config_title'];
		}
		else
		{
			$vrs['config_title'] = '';
		}

		if (isset($this->request->post['config_meta_description']))
		{
			$vrs['config_meta_description'] = $this->request->post['config_meta_description'];
		}
		elseif (isset($store_info['config_meta_description']))
		{
			$vrs['config_meta_description'] = $store_info['config_meta_description'];
		}
		else
		{
			$vrs['config_meta_description'] = '';
		}

		if (isset($this->request->post['config_layout_id']))
		{
			$vrs['config_layout_id'] = $this->request->post['config_layout_id'];
		}
		elseif (isset($store_info['config_layout_id']))
		{
			$vrs['config_layout_id'] = $store_info['config_layout_id'];
		}
		else
		{
			$vrs['config_layout_id'] = '';
		}

		$this->registry->model('design/layout');
		$vrs['layouts'] = $this->model_design_layout->getLayouts();
		if (isset($this->request->post['config_template']))
		{
			$vrs['config_template'] = $this->request->post['config_template'];
		}
		elseif (isset($store_info['config_template']))
		{
			$vrs['config_template'] = $store_info['config_template'];
		}
		else
		{
			$vrs['config_template'] = '';
		}

		$vrs['templates'] = array();
		$directories      = glob(DIR_ROOT . '/www/view/*', GLOB_ONLYDIR);
		foreach ($directories as $directory)
		{
			$vrs['templates'][] = basename($directory);
		}

		if (isset($this->request->post['config_country_id']))
		{
			$vrs['config_country_id'] = $this->request->post['config_country_id'];
		}
		elseif (isset($store_info['config_country_id']))
		{
			$vrs['config_country_id'] = $store_info['config_country_id'];
		}
		else
		{
			$vrs['config_country_id'] = $this->config->get('config_country_id');
		}

		$this->registry->model('localisation/country');
		$vrs['countries'] = $this->model_localisation_country->getCountries();
		if (isset($this->request->post['config_zone_id']))
		{
			$vrs['config_zone_id'] = $this->request->post['config_zone_id'];
		}
		elseif (isset($store_info['config_zone_id']))
		{
			$vrs['config_zone_id'] = $store_info['config_zone_id'];
		}
		else
		{
			$vrs['config_zone_id'] = $this->config->get('config_zone_id');
		}

		if (isset($this->request->post['config_language']))
		{
			$vrs['config_language'] = $this->request->post['config_language'];
		}
		elseif (isset($store_info['config_language']))
		{
			$vrs['config_language'] = $store_info['config_language'];
		}
		else
		{
			$vrs['config_language'] = $this->config->get('config_language');
		}

		$this->registry->model('localisation/language');
		$vrs['languages'] = $this->model_localisation_language->getLanguages();
		if (isset($this->request->post['config_currency']))
		{
			$vrs['config_currency'] = $this->request->post['config_currency'];
		}
		elseif (isset($store_info['config_currency']))
		{
			$vrs['config_currency'] = $store_info['config_currency'];
		}
		else
		{
			$vrs['config_currency'] = $this->config->get('config_currency');
		}

		$this->registry->model('localisation/currency');
		$vrs['currencies'] = $this->model_localisation_currency->getCurrencies();
		if (isset($this->request->post['config_catalog_limit']))
		{
			$vrs['config_catalog_limit'] = $this->request->post['config_catalog_limit'];
		}
		elseif (isset($store_info['config_catalog_limit']))
		{
			$vrs['config_catalog_limit'] = $store_info['config_catalog_limit'];
		}
		else
		{
			$vrs['config_catalog_limit'] = '12';
		}

		if (isset($this->request->post['config_tax']))
		{
			$vrs['config_tax'] = $this->request->post['config_tax'];
		}
		elseif (isset($store_info['config_tax']))
		{
			$vrs['config_tax'] = $store_info['config_tax'];
		}
		else
		{
			$vrs['config_tax'] = '';
		}

		if (isset($this->request->post['config_tax_default']))
		{
			$vrs['config_tax_default'] = $this->request->post['config_tax_default'];
		}
		elseif (isset($store_info['config_tax_default']))
		{
			$vrs['config_tax_default'] = $store_info['config_tax_default'];
		}
		else
		{
			$vrs['config_tax_default'] = '';
		}

		if (isset($this->request->post['config_tax_customer']))
		{
			$vrs['config_tax_customer'] = $this->request->post['config_tax_customer'];
		}
		elseif (isset($store_info['config_tax_customer']))
		{
			$vrs['config_tax_customer'] = $store_info['config_tax_customer'];
		}
		else
		{
			$vrs['config_tax_customer'] = '';
		}

		if (isset($this->request->post['config_customer_group_id']))
		{
			$vrs['config_customer_group_id'] = $this->request->post['config_customer_group_id'];
		}
		elseif (isset($store_info['config_customer_group_id']))
		{
			$vrs['config_customer_group_id'] = $store_info['config_customer_group_id'];
		}
		else
		{
			$vrs['config_customer_group_id'] = '';
		}

		$this->registry->model('sale/customer_group');
		$vrs['customer_groups'] = $this->model_sale_customer_group->getCustomerGroups();
		if (isset($this->request->post['config_customer_group_display']))
		{
			$vrs['config_customer_group_display'] = $this->request->post['config_customer_group_display'];
		}
		elseif (isset($store_info['config_customer_group_display']))
		{
			$vrs['config_customer_group_display'] = $store_info['config_customer_group_display'];
		}
		else
		{
			$vrs['config_customer_group_display'] = array();
		}

		if (isset($this->request->post['config_customer_price']))
		{
			$vrs['config_customer_price'] = $this->request->post['config_customer_price'];
		}
		elseif (isset($store_info['config_customer_price']))
		{
			$vrs['config_customer_price'] = $store_info['config_customer_price'];
		}
		else
		{
			$vrs['config_customer_price'] = '';
		}

		if (isset($this->request->post['config_account_id']))
		{
			$vrs['config_account_id'] = $this->request->post['config_account_id'];
		}
		elseif (isset($store_info['config_account_id']))
		{
			$vrs['config_account_id'] = $store_info['config_account_id'];
		}
		else
		{
			$vrs['config_account_id'] = '';
		}

		$this->registry->model('tool/image');
		if (isset($this->request->post['config_logo']))
		{
			$vrs['config_logo'] = $this->request->post['config_logo'];
		}
		elseif (isset($store_info['config_logo']))
		{
			$vrs['config_logo'] = $store_info['config_logo'];
		}
		else
		{
			$vrs['config_logo'] = '';
		}

		if (isset($store_info['config_logo']) && file_exists(DIR_IMAGE . $store_info['config_logo']) && is_file(DIR_IMAGE . $store_info['config_logo']))
		{
			$vrs['logo'] = $this->model_tool_image->resize($store_info['config_logo'], 100, 100);
		}
		else
		{
			$vrs['logo'] = $this->model_tool_image->resize('no_image.jpg', 100, 100);
		}

		if (isset($this->request->post['config_icon']))
		{
			$vrs['config_icon'] = $this->request->post['config_icon'];
		}
		elseif (isset($store_info['config_icon']))
		{
			$vrs['config_icon'] = $store_info['config_icon'];
		}
		else
		{
			$vrs['config_icon'] = '';
		}

		if (isset($store_info['config_icon']) && file_exists(DIR_IMAGE . $store_info['config_icon']) && is_file(DIR_IMAGE . $store_info['config_icon']))
		{
			$vrs['icon'] = $this->model_tool_image->resize($store_info['config_icon'], 100, 100);
		}
		else
		{
			$vrs['icon'] = $this->model_tool_image->resize('no_image.jpg', 100, 100);
		}

		$vrs['no_image'] = $this->model_tool_image->resize('no_image.jpg', 100, 100);
		if (isset($this->request->post['config_image_category_height']))
		{
			$vrs['config_image_category_height'] = $this->request->post['config_image_category_height'];
		}
		elseif (isset($store_info['config_image_category_height']))
		{
			$vrs['config_image_category_height'] = $store_info['config_image_category_height'];
		}
		else
		{
			$vrs['config_image_category_height'] = 80;
		}

		if (isset($this->request->post['config_image_thumb_width']))
		{
			$vrs['config_image_thumb_width'] = $this->request->post['config_image_thumb_width'];
		}
		elseif (isset($store_info['config_image_thumb_width']))
		{
			$vrs['config_image_thumb_width'] = $store_info['config_image_thumb_width'];
		}
		else
		{
			$vrs['config_image_thumb_width'] = 228;
		}

		if (isset($this->request->post['config_image_thumb_height']))
		{
			$vrs['config_image_thumb_height'] = $this->request->post['config_image_thumb_height'];
		}
		elseif (isset($store_info['config_image_thumb_height']))
		{
			$vrs['config_image_thumb_height'] = $store_info['config_image_thumb_height'];
		}
		else
		{
			$vrs['config_image_thumb_height'] = 228;
		}

		if (isset($this->request->post['config_image_popup_width']))
		{
			$vrs['config_image_popup_width'] = $this->request->post['config_image_popup_width'];
		}
		elseif (isset($store_info['config_image_popup_width']))
		{
			$vrs['config_image_popup_width'] = $store_info['config_image_popup_width'];
		}
		else
		{
			$vrs['config_image_popup_width'] = 500;
		}

		if (isset($this->request->post['config_image_popup_height']))
		{
			$vrs['config_image_popup_height'] = $this->request->post['config_image_popup_height'];
		}
		elseif (isset($store_info['config_image_popup_height']))
		{
			$vrs['config_image_popup_height'] = $store_info['config_image_popup_height'];
		}
		else
		{
			$vrs['config_image_popup_height'] = 500;
		}

		if (isset($this->request->post['config_image_product_width']))
		{
			$vrs['config_image_product_width'] = $this->request->post['config_image_product_width'];
		}
		elseif (isset($store_info['config_image_product_width']))
		{
			$vrs['config_image_product_width'] = $store_info['config_image_product_width'];
		}
		else
		{
			$vrs['config_image_product_width'] = 80;
		}

		if (isset($this->request->post['config_image_product_height']))
		{
			$vrs['config_image_product_height'] = $this->request->post['config_image_product_height'];
		}
		elseif (isset($store_info['config_image_product_height']))
		{
			$vrs['config_image_product_height'] = $store_info['config_image_product_height'];
		}
		else
		{
			$vrs['config_image_product_height'] = 80;
		}

		if (isset($this->request->post['config_image_category_width']))
		{
			$vrs['config_image_category_width'] = $this->request->post['config_image_category_width'];
		}
		elseif (isset($store_info['config_image_category_width']))
		{
			$vrs['config_image_category_width'] = $store_info['config_image_category_width'];
		}
		else
		{
			$vrs['config_image_category_width'] = 80;
		}

		if (isset($this->request->post['config_image_additional_width']))
		{
			$vrs['config_image_additional_width'] = $this->request->post['config_image_additional_width'];
		}
		elseif (isset($store_info['config_image_additional_width']))
		{
			$vrs['config_image_additional_width'] = $store_info['config_image_additional_width'];
		}
		else
		{
			$vrs['config_image_additional_width'] = 74;
		}

		if (isset($this->request->post['config_image_additional_height']))
		{
			$vrs['config_image_additional_height'] = $this->request->post['config_image_additional_height'];
		}
		elseif (isset($store_info['config_image_additional_height']))
		{
			$vrs['config_image_additional_height'] = $store_info['config_image_additional_height'];
		}
		else
		{
			$vrs['config_image_additional_height'] = 74;
		}

		if (isset($this->request->post['config_image_related_width']))
		{
			$vrs['config_image_related_width'] = $this->request->post['config_image_related_width'];
		}
		elseif (isset($store_info['config_image_related_width']))
		{
			$vrs['config_image_related_width'] = $store_info['config_image_related_width'];
		}
		else
		{
			$vrs['config_image_related_width'] = 80;
		}

		if (isset($this->request->post['config_image_related_height']))
		{
			$vrs['config_image_related_height'] = $this->request->post['config_image_related_height'];
		}
		elseif (isset($store_info['config_image_related_height']))
		{
			$vrs['config_image_related_height'] = $store_info['config_image_related_height'];
		}
		else
		{
			$vrs['config_image_related_height'] = 80;
		}

		if (isset($this->request->post['config_image_compare_width']))
		{
			$vrs['config_image_compare_width'] = $this->request->post['config_image_compare_width'];
		}
		elseif (isset($store_info['config_image_compare_width']))
		{
			$vrs['config_image_compare_width'] = $store_info['config_image_compare_width'];
		}
		else
		{
			$vrs['config_image_compare_width'] = 90;
		}

		if (isset($this->request->post['config_image_compare_height']))
		{
			$vrs['config_image_compare_height'] = $this->request->post['config_image_compare_height'];
		}
		elseif (isset($store_info['config_image_compare_height']))
		{
			$vrs['config_image_compare_height'] = $store_info['config_image_compare_height'];
		}
		else
		{
			$vrs['config_image_compare_height'] = 90;
		}

		if (isset($this->request->post['config_image_wishlist_width']))
		{
			$vrs['config_image_wishlist_width'] = $this->request->post['config_image_wishlist_width'];
		}
		elseif (isset($store_info['config_image_wishlist_width']))
		{
			$vrs['config_image_wishlist_width'] = $store_info['config_image_wishlist_width'];
		}
		else
		{
			$vrs['config_image_wishlist_width'] = 50;
		}

		if (isset($this->request->post['config_image_wishlist_height']))
		{
			$vrs['config_image_wishlist_height'] = $this->request->post['config_image_wishlist_height'];
		}
		elseif (isset($store_info['config_image_wishlist_height']))
		{
			$vrs['config_image_wishlist_height'] = $store_info['config_image_wishlist_height'];
		}
		else
		{
			$vrs['config_image_wishlist_height'] = 50;
		}

		if (isset($this->request->post['config_image_cart_width']))
		{
			$vrs['config_image_cart_width'] = $this->request->post['config_image_cart_width'];
		}
		elseif (isset($store_info['config_image_cart_width']))
		{
			$vrs['config_image_cart_width'] = $store_info['config_image_cart_width'];
		}
		else
		{
			$vrs['config_image_cart_width'] = 80;
		}

		if (isset($this->request->post['config_image_cart_height']))
		{
			$vrs['config_image_cart_height'] = $this->request->post['config_image_cart_height'];
		}
		elseif (isset($store_info['config_image_cart_height']))
		{
			$vrs['config_image_cart_height'] = $store_info['config_image_cart_height'];
		}
		else
		{
			$vrs['config_image_cart_height'] = 80;
		}

		if (isset($this->request->post['config_use_ssl']))
		{
			$vrs['config_use_ssl'] = $this->request->post['config_use_ssl'];
		}
		elseif (isset($store_info['config_use_ssl']))
		{
			$vrs['config_use_ssl'] = $store_info['config_use_ssl'];
		}
		else
		{
			$vrs['config_use_ssl'] = '';
		}

		/**
		 * 模板处理
		 */
		$vrs['page_header'] = $this->registry->exectrl('common/page_header');
		$vrs['page_footer'] = $this->registry->exectrl('common/page_footer');

		return $this->view('template/setting/store_form.tpl', $vrs);
	}

	private function validateForm()
	{
		if (!$this->user->hasPermission('modify', 'setting/store'))
		{
			$this->error['warning'] = $this->language->get('error_permission');
		}
		if ((mb_strlen($this->request->post['config_domain']) < 3) || (mb_strlen($this->request->post['config_domain']) > 50))
		{
			$this->error['domain'] = $this->language->get('error_domain');
		}
		if (!$this->request->post['config_url'])
		{
			$this->error['url'] = $this->language->get('error_url');
		}
		if (!$this->request->post['config_name'])
		{
			$this->error['name'] = $this->language->get('error_name');
		}
		if ((mb_strlen($this->request->post['config_owner']) < 3) || (mb_strlen($this->request->post['config_owner']) > 64))
		{
			$this->error['owner'] = $this->language->get('error_owner');
		}
		if ((mb_strlen($this->request->post['config_address']) < 3) || (mb_strlen($this->request->post['config_address']) > 256))
		{
			$this->error['address'] = $this->language->get('error_address');
		}
		if ((mb_strlen($this->request->post['config_email']) > 96) || !preg_match('/^[^\@]+@.*\.[a-z]{2,6}$/i', $this->request->post['config_email']))
		{
			$this->error['email'] = $this->language->get('error_email');
		}
		if ((mb_strlen($this->request->post['config_telephone']) < 3) || (mb_strlen($this->request->post['config_telephone']) > 32))
		{
			$this->error['telephone'] = $this->language->get('error_telephone');
		}
		if (!$this->request->post['config_title'])
		{
			$this->error['title'] = $this->language->get('error_title');
		}
		if (!empty($this->request->post['config_customer_group_display']) && !in_array($this->request->post['config_customer_group_id'], $this->request->post['config_customer_group_display']))
		{
			$this->error['customer_group_display'] = $this->language->get('error_customer_group_display');
		}
		if (!$this->request->post['config_image_category_width'] || !$this->request->post['config_image_category_height'])
		{
			$this->error['image_category'] = $this->language->get('error_image_category');
		}
		if (!$this->request->post['config_image_thumb_width'] || !$this->request->post['config_image_thumb_height'])
		{
			$this->error['image_thumb'] = $this->language->get('error_image_thumb');
		}
		if (!$this->request->post['config_image_popup_width'] || !$this->request->post['config_image_popup_height'])
		{
			$this->error['image_popup'] = $this->language->get('error_image_popup');
		}
		if (!$this->request->post['config_image_product_width'] || !$this->request->post['config_image_product_height'])
		{
			$this->error['image_product'] = $this->language->get('error_image_product');
		}
		if (!$this->request->post['config_image_additional_width'] || !$this->request->post['config_image_additional_height'])
		{
			$this->error['image_additional'] = $this->language->get('error_image_additional');
		}
		if (!$this->request->post['config_image_related_width'] || !$this->request->post['config_image_related_height'])
		{
			$this->error['image_related'] = $this->language->get('error_image_related');
		}
		if (!$this->request->post['config_image_compare_width'] || !$this->request->post['config_image_compare_height'])
		{
			$this->error['image_compare'] = $this->language->get('error_image_compare');
		}
		if (!$this->request->post['config_image_wishlist_width'] || !$this->request->post['config_image_wishlist_height'])
		{
			$this->error['image_wishlist'] = $this->language->get('error_image_wishlist');
		}
		if (!$this->request->post['config_image_cart_width'] || !$this->request->post['config_image_cart_height'])
		{
			$this->error['image_cart'] = $this->language->get('error_image_cart');
		}
		if (!$this->request->post['config_catalog_limit'])
		{
			$this->error['catalog_limit'] = $this->language->get('error_limit');
		}
		if ($this->error && !isset($this->error['warning']))
		{
			$this->error['warning'] = $this->language->get('error_warning');
		}

		return !$this->error;
	}

	private function validateDelete()
	{
		if (!$this->user->hasPermission('modify', 'setting/store'))
		{
			$this->error['warning'] = $this->language->get('error_permission');
		}

		$this->registry->model('sale/order');
		foreach ($this->request->post['selected'] as $store_id)
		{
			if (!$store_id)
			{
				$this->error['warning'] = $this->language->get('error_default');
			}
			$store_total = $this->model_sale_order->getTotalOrdersByStoreId($store_id);
			if ($store_total)
			{
				$this->error['warning'] = sprintf($this->language->get('error_store'), $store_total);
			}
		}

		return !$this->error;
	}

	public function template()
	{
		$template = basename($this->request->get['template']);
		if (file_exists(DIR_IMAGE . 'themes/' . $template . '.png'))
		{
			$image = $this->registry->execdn('themes/' . $template . '.png', IMAGES_PATH);
		}
		else
		{
			$image = $this->registry->execdn('no_image.jpg', IMAGES_PATH);
		}

		return ('<img src="' . $image . '" />');
	}
}
?>