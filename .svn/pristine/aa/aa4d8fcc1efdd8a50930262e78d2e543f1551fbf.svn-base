<?php
class ControllerGprsBatch extends Controller
{
	private $error = array();

	private $_cards = array();

	public function index()
	{
		$this->registry->language('gprs/batch');
		$this->registry->model('gprs/batch');
		$this->document->setTitle($this->language->get('heading_title'));
		$vrs = $this->language->data;

		$vrs['breadcrumbs']   = array();
		$vrs['breadcrumbs'][] = array(
			'text'      => $this->language->get('text_home'),
			'href'      => $this->url->link('common/home'),
			'separator' => false
		);
		$vrs['breadcrumbs'][] = array(
			'text'      => $this->language->get('heading_title'),
			'href'      => $this->url->link('gprs/batch'),
			'separator' => ' :: '
		);

		$page = isset($this->request->get['page']) ? $this->request->get['page'] : 1;
		$data = array(
			'start'            => ((int)$page - 1) * $this->config->get('config_admin_limit'),
			'limit'            => $this->config->get('config_admin_limit'),
			'org_id'           => isset($this->request->get['org_id']) ? $this->request->get_var('org_id') : '',
			'batch_sn'         => $this->request->get_var('batch_sn'),
			'added_date_start' => $this->request->get_var('added_date_start'),
			'added_date_end'   => $this->request->get_var('added_date_end')
		);

		$vrs['success'] = '';
		if (isset($this->session->data['success']))
		{
			$vrs['success'] = $this->session->data['success'];
			unset($this->session->data['success']);
		}

		$vrs['org_id']           = $data['org_id'];
		$vrs['batch_sn']         = $data['batch_sn'];
		$vrs['added_date_start'] = $data['added_date_start'];
		$vrs['added_date_end']   = $data['added_date_end'];
		$vrs['items']            = $this->model_gprs_batch->getItems($data);

		/**
		 * 获取机构
		 */
		$this->registry->model('user/user');
		$vrs['orgs']   = $this->model_user_user->getOrgs();
		$vrs['nation'] = $this->model_gprs_batch->getNation();

		/**
		 * 连接组合处理
		 */
		$url = '';
		$url .= isset($this->request->get['org_id']) ? '&org_id=' . $this->request->get['org_id'] : '';
		$url .= isset($this->request->get['batch_sn']) ? '&batch_sn=' . $this->request->get['batch_sn'] : '';
		$url .= isset($this->request->get['time_added']) ? '&time_added=' . $this->request->get['time_added'] : '';
		$vrs['action'] = $url . '&page=' . $page;

		/**
		 * 分页处理
		 */
		$pagination        = new Pagination();
		$pagination->total = $this->model_gprs_batch->getItems($data, true);
		$pagination->page  = $page;
		$pagination->limit = $this->config->get('config_admin_limit');
		$pagination->text  = $this->language->get('text_pagination');
		$pagination->url   = $this->url->link('gprs/batch', "page={page}", true);
		$vrs['pagination'] = $pagination->render();

		/**
		 * 模板处理
		 */
		$vrs['page_header'] = $this->registry->exectrl('common/page_header');
		$vrs['page_footer'] = $this->registry->exectrl('common/page_footer');

		return $this->view('template/gprs/batch_list.tpl', $vrs);
	}

	/**
	 * 获取区域
	 */
	public function zone()
	{
		$pid = $this->request->get_var('pid', 'i');
		$res = $this->sdb()->fetch_pairs("SELECT ntid, ntname FROM cc_nation WHERE parent = {$pid}");
		exit(json_encode($res));
	}

	/**
	 * 增加批次
	 */
	public function insert()
	{
		$this->registry->language('gprs/batch');
		$this->document->setTitle($this->language->get('heading_title'));
		$this->registry->model('gprs/batch');

		if (($this->request->server['REQUEST_METHOD'] == 'POST') && $this->validate())
		{
			/**
			 * 记录批次信息
			 */
			$data     = array(
				'batch_sn'      => $this->request->get_var('batch_sn'),
				'batch_name'    => $this->request->get_var('batch_name'),
				'batch_memo'    => $this->request->get_var('batch_memo'),
				'org_id'        => $this->request->get_var('org_id', 'i'),
				'batch_shipper' => $this->request->get_var('batch_shipper'),
				'province_id'   => $this->request->get_var('province_id', 'i'),
				'city_id'       => $this->request->get_var('city_id', 'i'),
				'district_id'   => $this->request->get_var('district_id', 'i'),
				'gprs_month'    => $this->request->get_var('gprs_month', 'i'),
				'live_month'    => $this->request->get_var('live_month', 'i')
			);
			$batch_id = $this->model_gprs_batch->insert($data);

			/**
			 * 批量插入流量卡
			 */
			if ($batch_id && !empty($this->_cards))
			{
				$insert_params = array(
					'card_sn'      => $this->request->get_var('card_sn'),
					'card_name'    => $this->request->get_var('card_name'),
					'card_iccid'   => $this->request->get_var('card_iccid'),
					'owner_name'   => $this->request->get_var('owner_name'),
					'owner_gender' => $this->request->get_var('owner_gender'),
					'owner_cdi'    => $this->request->get_var('owner_cdi'),
				);

				$card = array(
					'batch_id'    => $batch_id,
					'org_id'      => $data['org_id'],
					'gprs_month'  => $data['gprs_month'],
					'time_expire' => date("Y-m-d H:i:s", strtotime('+' . $data['live_month'] . 'month'))
				);

				array_shift($this->_cards);
				$this->registry->model('gprs/card');
				$iccid_count   = count($this->_cards);
				$success_count = $exist_count = $failed_count = 0;
				$exist_iccid   = $failed_iccid = array();

				foreach ($this->_cards as $v)
				{
					foreach ($insert_params as $key => $val)
					{
						if ($key == 'owner_gender')
						{
							$card['owner_gender'] = isset($v[$val]) ? ($v[$val] == '男' ? 1 : 2) : 0;
						}
						else
						{
							$card[$key] = isset($v[$val]) ? trim($v[$val]) : null;
						}
					}

					if (empty($card['card_iccid']))
					{
						continue;
					}

					/**
					 * 判断该ICCID是否已插入
					 */
					if ($this->model_gprs_batch->getGprsCard($card['card_iccid']))
					{
						$exist_count++;
						$exist_iccid[] = $card['card_iccid'];
					}
					else
					{
						if ($this->model_gprs_card->insert($card))
						{
							$success_count++;
							continue;
						}
						$failed_count++;
						$failed_iccid[] = $card['card_iccid'];
					}
				}

				if ($success_count == 0)
				{
					$this->model_gprs_batch->delByBatchId($batch_id);
				}
				else
				{
					$this->model_gprs_batch->getCardAmount($success_count, $batch_id);
				}
				
				$batch_log = "批次号{$data['batch_sn']}，本次导入{$iccid_count}张手机卡，导入成功{$success_count}张，失败{$failed_count}张，已重复的有{$exist_count}张。";
				$this->session->data['success'] = "{$batch_log}如有疑问，可联系管理员查看批次导入日志。";

				if ($failed_count)
				{
					$batch_log .= '失败手机卡：(' . implode(',', $failed_iccid) . ')';
				}

				if ($exist_count)
				{
					$batch_log .= '重复手机卡：(' . implode(',', $exist_iccid) . ')';
				}
				$this->log->write('batch.log', $batch_log);
			}
			$this->registry->redirect('/gprs/batch');
		}

		return $this->getForm();
	}

	/*
	 * 编辑批次
	 */
	public function update()
	{
		$this->registry->language('gprs/batch');
		$this->document->setTitle($this->language->get('heading_title'));
		$this->registry->model('gprs/batch');

		if (($this->request->server['REQUEST_METHOD'] == 'POST') && $this->validate())
		{
			$data = array(
				'batch_id'      => $this->request->get_var('batch_id', 'i'),
				'batch_sn'      => $this->request->get_var('batch_sn'),
				'batch_name'    => $this->request->get_var('batch_name'),
				'batch_memo'    => $this->request->get_var('batch_memo'),
				'batch_shipper' => $this->request->get_var('batch_shipper'),
				'province_id'   => $this->request->get_var('province_id', 'i'),
				'city_id'       => $this->request->get_var('city_id', 'i'),
				'district_id'   => $this->request->get_var('district_id', 'i')
			);
			$this->model_gprs_batch->update($data);
			$this->session->data['success'] = $this->language->get('text_update_success');
			$this->registry->redirect($this->url->link('gprs/batch'));
		}

		return $this->getForm();
	}

	private function getForm()
	{
		$vrs                        = $this->language->data;
		$vrs['error_warning']       = isset($this->error['warning']) ? $this->error['warning'] : '';
		$vrs['error_batch_sn']      = isset($this->error['batch_sn']) ? $this->error['batch_sn'] : '';
		$vrs['error_batch_name']    = isset($this->error['batch_name']) ? $this->error['batch_name'] : '';
		$vrs['error_batch_memo']    = isset($this->error['batch_memo']) ? $this->error['batch_memo'] : '';
		$vrs['error_batch_shipper'] = isset($this->error['batch_shipper']) ? $this->error['batch_shipper'] : '';
		$vrs['error_org']           = isset($this->error['org']) ? $this->error['org'] : '';
		$vrs['error_province']      = isset($this->error['province']) ? $this->error['province'] : '';
		$vrs['error_city']          = isset($this->error['city']) ? $this->error['city'] : '';
		$vrs['error_district']      = isset($this->error['district']) ? $this->error['district'] : '';
		$vrs['error_gprs_month']    = isset($this->error['gprs_month']) ? $this->error['gprs_month'] : '';
		$vrs['error_live_month']    = isset($this->error['live_month']) ? $this->error['live_month'] : '';
		$vrs['error_file']          = isset($this->error['file']) ? $this->error['file'] : '';
		$vrs['error_card_sn']       = isset($this->error['card_sn']) ? $this->error['card_sn'] : '';
		$vrs['error_card_iccid']    = isset($this->error['card_iccid']) ? $this->error['card_iccid'] : '';
		$vrs['error_card_name']     = isset($this->error['card_name']) ? $this->error['card_name'] : '';
		$vrs['error_owner_name']    = isset($this->error['owner_name']) ? $this->error['owner_name'] : '';
		$vrs['error_owner_cdi']     = isset($this->error['owner_cdi']) ? $this->error['owner_cdi'] : '';

		/**
		 * 导航栏组合
		 */
		$vrs['breadcrumbs']   = array();
		$vrs['breadcrumbs'][] = array(
			'text'      => $this->language->get('text_home'),
			'href'      => $this->url->link('common/home'),
			'separator' => false
		);
		$vrs['breadcrumbs'][] = array(
			'text'      => $this->language->get('heading_title'),
			'href'      => $this->url->link('gprs/batch'),
			'separator' => ' :: '
		);

		/**
		 * 获取机构
		 */
		$this->registry->model('user/user');
		$vrs['orgs'] = $this->model_user_user->getOrgs();

		/**
		 * 连接组合处理
		 */
		$url = '';
		$url .= isset($this->request->get['org_id']) ? '&org_id=' . $this->request->get['org_id'] : '';
		$url .= isset($this->request->get['batch_sn']) ? '&batch_sn=' . $this->request->get['batch_sn'] : '';
		$url .= isset($this->request->get['time_added']) ? '&time_added=' . $this->request->get['time_added'] : '';
		$url .= isset($this->request->get['page']) ? '&page=' . $this->request->get['page'] : '';

		$vrs['cancel'] = $this->url->link('gprs/batch', $url, true);

		if (!isset($this->request->get['batch_id']))
		{
			$vrs['action'] = $this->url->link('gprs/batch/insert');
		}
		else
		{
			$vrs['action'] = $this->url->link('gprs/batch/update', 'batch_id=' . $this->request->get['batch_id'], true);
		}

		if (isset($this->request->get['batch_id']))
		{
			$batch_info = $this->model_gprs_batch->get($this->request->get_var('batch_id', 'i'));
		}

		$vrs['batch_id'] = isset($this->request->get['batch_id']) ? $this->request->get['batch_id'] : 0;

		if (isset($this->request->post['batch_sn']))
		{
			$vrs['batch_sn'] = $this->request->post['batch_sn'];
		}
		elseif (!empty($batch_info))
		{
			$vrs['batch_sn'] = $batch_info['batch_sn'];
		}
		else
		{
			$vrs['batch_sn'] = '';
		}

		if (isset($this->request->post['batch_name']))
		{
			$vrs['batch_name'] = $this->request->post['batch_name'];
		}
		elseif (!empty($batch_info))
		{
			$vrs['batch_name'] = $batch_info['batch_name'];
		}
		else
		{
			$vrs['batch_name'] = '';
		}

		if (isset($this->request->post['batch_memo']))
		{
			$vrs['batch_memo'] = $this->request->post['batch_memo'];
		}
		elseif (!empty($batch_info))
		{
			$vrs['batch_memo'] = $batch_info['batch_memo'];
		}
		else
		{
			$vrs['batch_memo'] = '';
		}

		if (isset($this->request->post['batch_shipper']))
		{
			$vrs['batch_shipper'] = $this->request->post['batch_shipper'];
		}
		elseif (!empty($batch_info))
		{
			$vrs['batch_shipper'] = $batch_info['batch_shipper'];
		}
		else
		{
			$vrs['batch_shipper'] = '';
		}

		if (isset($this->request->post['org_id']))
		{
			$vrs['org_id'] = $this->request->post['org_id'];
		}
		elseif (!empty($batch_info))
		{
			$vrs['org_id'] = $batch_info['org_id'];
		}
		else
		{
			$vrs['org_id'] = '';
		}

		if (isset($this->request->post['province_id']))
		{
			$vrs['province_id'] = $this->request->post['province_id'];
		}
		elseif (!empty($batch_info))
		{
			$vrs['province_id'] = $batch_info['province_id'];
		}
		else
		{
			$vrs['province_id'] = '';
		}

		if (isset($this->request->post['city_id']))
		{
			$vrs['city_id'] = $this->request->post['city_id'];
		}
		elseif (!empty($batch_info))
		{
			$vrs['city_id'] = $batch_info['city_id'];
		}
		else
		{
			$vrs['city_id'] = '';
		}

		if (isset($this->request->post['district_id']))
		{
			$vrs['district_id'] = $this->request->post['district_id'];
		}
		elseif (!empty($batch_info))
		{
			$vrs['district_id'] = $batch_info['district_id'];
		}
		else
		{
			$vrs['district_id'] = '';
		}

		if (isset($this->request->post['gprs_month']))
		{
			$vrs['gprs_month'] = $this->request->post['gprs_month'];
		}
		elseif (!empty($batch_info))
		{
			$vrs['gprs_month'] = $batch_info['gprs_month'];
		}
		else
		{
			$vrs['gprs_month'] = '';
		}

		if (isset($this->request->post['live_month']))
		{
			$vrs['live_month'] = $this->request->post['live_month'];
		}
		elseif (!empty($batch_info))
		{
			$vrs['live_month'] = $batch_info['live_month'];
		}
		else
		{
			$vrs['live_month'] = '';
		}

		$filename = DIR_ROOT . "/temp/{$this->request->get_var('filename','s','','test')}.php";
		if (file_exists($filename))
		{
			require($filename);
			$vrs['filename']  = !empty($cards) ? $this->request->post['filename'] : '';
			$vrs['file_head'] = !empty($cards) ? $this->_cards[0] : '';
		}
		else
		{
			$vrs['filename'] = '';
		}

		$vrs['card_sn']      = $this->request->get_var('card_sn');
		$vrs['card_name']    = $this->request->get_var('card_name');
		$vrs['card_iccid']   = $this->request->get_var('card_iccid');
		$vrs['owner_name']   = $this->request->get_var('owner_name');
		$vrs['owner_gender'] = $this->request->get_var('owner_gender');
		$vrs['owner_cdi']    = $this->request->get_var('owner_cdi');

		/**
		 * 模板处理
		 */
		$vrs['page_header'] = $this->registry->exectrl('common/page_header');
		$vrs['page_footer'] = $this->registry->exectrl('common/page_footer');

		return $this->view('template/gprs/batch_form.tpl', $vrs);
	}

	public function upload()
	{
		$json = array();
		$this->registry->language('gprs/batch');

		if (!$this->user->hasPermission('modify', 'gprs/batch'))
		{
			$json['error'] = $this->language->get('error_permission');
		}

		if (!isset($json['error']))
		{
			if (!empty($this->request->files['file']['name']))
			{
				$filename = basename(html_entity_decode($this->request->files['file']['name'], ENT_QUOTES, 'UTF-8'));
				if ((mb_strlen($filename) < 3) || (mb_strlen($filename) > 128))
				{
					$json['error'] = $this->language->get('error_filename');
				}

				// Allowed file extension types
				$file_ext         = strtolower(substr(strrchr($filename, '.'), 1));
				$file_ext_allowed = array_flip(array_map('trim', explode("\n", strtolower($this->config->get('config_file_extension_allowed')))));
				if (!isset($file_ext_allowed[$file_ext]))
				{
					$json['error'] = $this->language->get('error_file_type') . " - {$file_ext}";
				}

				// Allowed file mime types
				$file_type         = strtolower($this->request->files['file']['type']);
				$file_type_allowed = array_flip(array_map('trim', explode("\n", strtolower($this->config->get('config_file_mime_allowed')))));
				if (!isset($file_type_allowed[$file_type]))
				{
					$json['error'] = $this->language->get('error_file_type') . " - {$file_type}";
				}

				if ($this->request->files['file']['error'] != UPLOAD_ERR_OK)
				{
					$json['error'] = $this->language->get('error_upload_' . $this->request->files['file']['error']);
				}

				if (!isset($json['error']))
				{
					if (is_uploaded_file($this->request->files['file']['tmp_name']) && file_exists($this->request->files['file']['tmp_name']))
					{
						$filename = md5($filename . $this->user->getId());
						switch ($file_ext)
						{
							case 'txt':
								$data = $this->getText($this->request->files['file']['tmp_name']);
								break;
							case 'xlsx':
								$data = $this->getSheet($this->request->files['file']['tmp_name']);
								break;
							default:
								$data = array();
						}
						$json['filename']  = $filename;
						$json['file_ext']  = $file_ext;
						$json['file_head'] = !empty($data) ? $data[0] : '';
						$data              = '<?php $cards = ' . var_export($data, true) . ';?>';
						file_put_contents(DIR_ROOT . "/temp/{$filename}.php", $data);
					}

					$json['success'] = $this->language->get('text_upload');
				}
			}
			else
			{
				$json['error'] = $this->language->get('error_upload');
			}
		}

		return json_encode($json);
	}

	/**
	 * txt文件分析
	 *
	 * @param $filename
	 * @return array|mixed|string
	 */
	protected function getText($filename)
	{
		$content = file_get_contents($filename);
		if (empty($content))
		{
			return $content;
		}
		$content = str_replace("\r\n", "\n", $content);
		$content = array_filter(explode("\n", $content), 'trim');
		if (empty($content))
		{
			return $content;
		}
		$data[] = array(
			'A' => '第一列',
			'B' => '第二列',
		);
		foreach ($content as $v)
		{
			$v = explode('	', trim($v));
			if (count($v) < 2)
			{
				continue;
			}
			$data[] = array(
				'A' => $v[0],
				'B' => $v[1],
			);
		}

		return $data;
	}

	/**
	 * excel文件分析
	 *
	 * @param $filename
	 * @return array
	 * @throws PHPExcel_Exception
	 */
	protected function getSheet($filename)
	{
		require DIR_ROOT . '/system/Classes/PHPExcel.php';
		$data         = array();
		$phpExcel     = PHPExcel_IOFactory::load($filename);
		$currentSheet = $phpExcel->getSheet(0);//当前页
		$row_num      = $currentSheet->getHighestRow();//当前页行数
		$col_max      = $currentSheet->getHighestColumn();//当前页最大列号

		for ($i = 1; $i <= $row_num; $i++)//循环从第二行开始，第一行往往是表头
		{
			$cell_values = array();
			for ($j = 'A'; $j <= $col_max; $j++)
			{
				$cell_values[$j] = $currentSheet->getCell($j . $i)->getFormattedValue();
			}
			$data[] = $cell_values;
		}

		return $data;
	}

	public function download()
	{
		wcore_fso::download(DIR_ROOT . '/admin/iccid.txt', 'iccid.txt');
	}

	private function validate()
	{
		if (!$this->user->hasPermission('modify', 'gprs/batch'))
		{
			$this->error['warning'] = $this->language->get('error_permission');
		}

		if (!trim($this->request->post['batch_sn']) || mb_strlen($this->request->post['batch_sn']) > 50)
		{
			$this->error['batch_sn'] = $this->language->get('error_batch_sn');
		}

		if (!trim($this->request->post['batch_name']) || mb_strlen($this->request->post['batch_name']) > 50)
		{
			$this->error['batch_name'] = $this->language->get('error_batch_name');
		}

		if (mb_strlen($this->request->post['batch_memo']) > 200)
		{
			$this->error['batch_memo'] = $this->language->get('error_batch_memo');
		}

		if (!trim($this->request->post['batch_shipper']) || mb_strlen($this->request->post['batch_shipper']) > 50)
		{
			$this->error['batch_shipper'] = $this->language->get('error_batch_shipper');
		}

		if (!$this->request->post['province_id'])
		{
			$this->error['province'] = $this->language->get('error_province');
		}

		if (empty($this->request->post['city_id']))
		{
			$this->error['city'] = $this->language->get('error_city');
		}

		if (!isset($this->request->get['batch_id']))
		{
			if (!$this->request->post['org_id'])
			{
				$this->error['org'] = $this->language->get('error_org');
			}

			if ($this->request->get_var('gprs_month', 'f') <= 0)
			{
				$this->error['gprs_month'] = $this->language->get('error_gprs_month');
			}

			if ($this->request->get_var('live_month', 'i') <= 0)
			{
				$this->error['live_month'] = $this->language->get('error_live_month');
			}
		}

		/**
		 * 新增批次，上传文件内容校验
		 */
		if (!isset($this->request->get['batch_id']))
		{
			$filename = DIR_ROOT . "/temp/{$this->request->get_var('filename','s','','test')}.php";

			if (!file_exists($filename))
			{
				$this->error['file'] = $this->language->get('error_file');
			}
			else
			{
				if (!$this->request->get_var('card_iccid'))
				{
					$this->error['card_iccid'] = $this->language->get('error_iccid');
				}

				require($filename); //加载流量卡分析好的数据

				if (empty($cards) || !isset($cards[1]))
				{
					$this->error['file'] = $this->language->get('error_file_size');
				}

				$this->_cards  = $cards;
				$insert_params = array(
					'card_sn'      => $this->request->get_var('card_sn'),
					'card_name'    => $this->request->get_var('card_name'),
					'card_iccid'   => $this->request->get_var('card_iccid'),
					'owner_name'   => $this->request->get_var('owner_name'),
					'owner_gender' => $this->request->get_var('owner_gender'),
					'owner_cdi'    => $this->request->get_var('owner_cdi'),
				);

				if (isset($this->_cards[1][$insert_params['card_sn']]) && mb_strlen(trim($this->_cards[1][$insert_params['card_sn']])) > 15)
				{
					$this->error['card_sn'] = $this->language->get('error_row');
				}

				if (isset($this->_cards[1][$insert_params['card_name']]) && mb_strlen(trim($this->_cards[1][$insert_params['card_name']])) > 15)
				{
					$this->error['card_name'] = $this->language->get('error_row');
				}

				if (!isset($this->_cards[1][$insert_params['card_iccid']]) || mb_strlen(trim($this->_cards[1][$insert_params['card_iccid']])) < 1 || strlen($this->_cards[1][$insert_params['card_iccid']]) > 20)
				{
					$this->error['card_iccid'] = $this->language->get('error_row');
				}

				if (isset($this->_cards[1][$insert_params['owner_name']]) && mb_strlen(trim($this->_cards[1][$insert_params['owner_name']])) > 15)
				{
					$this->error['owner_name'] = $this->language->get('error_row');
				}

				if (isset($this->_cards[1][$insert_params['owner_cdi']]) && mb_strlen(trim($this->_cards[1][$insert_params['owner_cdi']])) > 20)
				{
					$this->error['owner_cdi'] = $this->language->get('error_row');
				}
			}

			if (!$this->error)
			{
				unlink($filename); //删除流量卡数据文件
			}
		}

		return !$this->error;
	}

}
?>