<?php
class ModelUserUserGroup extends Model
{
	public function addUserGroup($data)
	{
		$this->mdb()->query('INSERT INTO ' . DB_PREFIX . "user_group SET name = '{$data['name']}', permission = '" . (isset($data['permission']) ? serialize($data['permission']) : '') . "'");
	}

	public function editUserGroup($user_group_id, $data)
	{
		$this->mdb()->query('UPDATE ' . DB_PREFIX . "user_group SET name = '{$data['name']}', permission = '" . (isset($data['permission']) ? serialize($data['permission']) : '') . "' WHERE user_group_id = '{$user_group_id}'");
	}

	public function deleteUserGroup($user_group_id)
	{
		$this->mdb()->query('DELETE FROM ' . DB_PREFIX . "user_group WHERE user_group_id = '{$user_group_id}'");
	}

	public function addPermission($user_id, $type, $page)
	{
		$user_row = $this->sdb()->fetch_row("SELECT DISTINCT user_group_id FROM " . DB_PREFIX . "user WHERE user_id = '{$user_id}'");
		if ($user_row)
		{
			$user_group_rows = $this->sdb()->fetch_row('SELECT DISTINCT * FROM ' . DB_PREFIX . "user_group WHERE user_group_id = '{$user_row['user_group_id']}'");
			if (!empty($user_group_rows))
			{
				$data          = unserialize($user_group_rows['permission']);
				$data[$type][] = $page;
				$this->mdb()->query('UPDATE ' . DB_PREFIX . "user_group SET permission = '" . serialize($data) . "' WHERE user_group_id = '{$user_row['user_group_id']}'");
			}
		}
	}

	public function getUserGroup($user_group_id)
	{
		$row        = $this->sdb()->fetch_row('SELECT DISTINCT * FROM ' . DB_PREFIX . "user_group WHERE user_group_id = '{$user_group_id}'");
		$user_group = array(
			'name'       => $row['name'],
			'permission' => unserialize($row['permission'])
		);

		return $user_group;
	}

	public function getUserGroups($data = array())
	{
		$sql = 'SELECT * FROM ' . DB_PREFIX . "user_group ORDER BY name";
		$sql .= (isset($data['order']) && ($data['order'] == 'DESC')) ? ' DESC' : ' ASC';

		if (isset($data['start']) || isset($data['limit']))
		{
			$data['start'] = ($data['start'] < 0) ? 0 : (int)$data['start'];
			$data['limit'] = ($data['limit'] < 1) ? 20 : (int)$data['limit'];
			$sql .= " LIMIT {$data['start']}, {$data['limit']}";
		}

		return $this->sdb()->fetch_all($sql);
	}

	public function getTotalUserGroups()
	{
		$row = $this->sdb()->fetch_row('SELECT COUNT(*) AS total FROM ' . DB_PREFIX . "user_group");

		return $row['total'];
	}

	public function getGroupByName($name)
	{
		return $this->sdb()->fetch_row("SELECT * FROM cc_user_group WHERE name = '{$name}'");
	}
}
?>